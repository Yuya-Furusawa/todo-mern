version: "3"

services:
  mysqldb:
    platform: linux/x86_64
    image: mysql:8.0
    hostname: mysqldb
    environment:
      - MYSQL_ROOT_PASSWORD=pass123
      - MYSQL_DATABASE=todomern
    ports:
      - 3306:3306
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - shared-network
    volumes:
      - ./server/initdb.d:/docker-entrypoint-initdb.d
      - db-config:/etc/mysql
      - db-data:/var/lib/mysql
      - ./db/backup/files:/data_backup/data

  nginx:
    image: nginx
    container_name: nginx_prod
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      api-prod:
        condition: service_healthy
      app-prod:
        condition: service_started
    networks:
      - shared-network

  api-prod:
    container_name: server_api_prod
    build:
      context: server
      dockerfile: Dockerfile
    hostname: api-prod
    environment:
      - IS_PROD=true
    depends_on:
      - mysqldb
    networks:
      - shared-network
    ports:
      - 5000:5000
    restart:
      unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://api-prod:5000"]
      interval: 5s
      timeout: 3s
      retries: 6

  app-prod:
    container_name: client_app_prod
    build:
      context: client
      dockerfile: Dockerfile
    hostname: app-prod
    environment:
      - REACT_APP_API_URL=http://api-prod:5000
    ports:
      - 3000:3000
    networks:
      - shared-network
    restart:
      unless-stopped

networks:
  shared-network:

volumes:
  db-config:
  db-data: